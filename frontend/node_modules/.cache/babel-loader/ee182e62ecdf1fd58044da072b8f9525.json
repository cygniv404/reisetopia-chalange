{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/anaconda/Documents/reisetopia-chalange-v2/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport { SearchBox } from './components/SearchBox';\nimport { HotelsContainer } from './components/HotelsContainers';\nimport { Spinner } from './components/Spinner';\nimport Axios from 'axios';\nimport { SortByName } from './components/SortByName';\n\nconst App = () => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('cars');\n  const [hotels, setHotels] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [sort, setSort] = useState(false);\n\n  const getSearchTerm = e => {\n    setLoading(true);\n    setSearchTerm(e.target.value);\n  };\n\n  const sortByName = () => {\n    setSort(true);\n  };\n\n  if (sort) {\n    hotels.sort((hotel1, hotel2) => hotel1.name.toLowerCase().localeCompare(hotel2.name.toLowerCase()));\n  }\n\n  useEffect(() => {\n    const fetchHotels = async () => {\n      const response = await Axios.get(`/hotels?search=${searchTerm}`);\n      const filteredHotels = response.data.result;\n      setHotels(filteredHotels);\n      setLoading(false);\n    };\n\n    fetchHotels();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"query-section\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        onSearch: getSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortByName, {\n        sort: sortByName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(HotelsContainer, {\n      hotels: hotels\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"bbitNbH4jzZEuaVAea1wOOn8Ji8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/anaconda/Documents/reisetopia-chalange-v2/src/App.tsx"],"names":["React","useState","useEffect","SearchBox","HotelsContainer","Spinner","Axios","SortByName","App","searchTerm","setSearchTerm","hotels","setHotels","loading","setLoading","sort","setSort","getSearchTerm","e","target","value","sortByName","hotel1","hotel2","name","toLowerCase","localeCompare","fetchHotels","response","get","filteredHotels","data","result"],"mappings":";;;;;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,eAAR,QAA8B,+BAA9B;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,yBAAzB;;AAiBA,MAAMC,GAA4B,GAAG,MAAM;AAAA;;AAEzC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAS,MAAT,CAA5C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAU,EAAV,CAApC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACc,IAAD,EAAMC,OAAN,IAAiBf,QAAQ,CAAU,KAAV,CAA/B;;AAEA,QAAMgB,aAAa,GAAIC,CAAD,IAAiC;AACrDJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAJ,IAAAA,aAAa,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,MAAID,IAAJ,EAAS;AACLJ,IAAAA,MAAM,CAACI,IAAP,CAAY,CAACO,MAAD,EAAQC,MAAR,KAAkBD,MAAM,CAACE,IAAP,CAAYC,WAAZ,GAA0BC,aAA1B,CAAwCH,MAAM,CAACC,IAAP,CAAYC,WAAZ,EAAxC,CAA9B;AACH;;AACDvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,WAAW,GAAG,YAAY;AAC5B,YAAMC,QAAyB,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAW,kBAAiBpB,UAAW,EAAvC,CAAxC;AACA,YAAMqB,cAAwB,GAAGF,QAAQ,CAACG,IAAT,CAAcC,MAA/C;AACApB,MAAAA,SAAS,CAACkB,cAAD,CAAT;AACAhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALD;;AAMAa,IAAAA,WAAW;AACZ,GARQ,EAQN,CAAClB,UAAD,CARM,CAAT;AASA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEQ;AAArB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEI;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGR,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgB,QAAC,eAAD;AAAiB,MAAA,MAAM,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,YAL1B;AAAA,kBADF;AASD,CApCD;;GAAMH,G;;KAAAA,G;AAsCN,eAAeA,GAAf","sourcesContent":["import './App.scss';\nimport React, {useState, useEffect} from 'react';\nimport {SearchBox} from './components/SearchBox';\nimport {HotelsContainer} from './components/HotelsContainers';\nimport {Spinner} from './components/Spinner';\nimport Axios from 'axios';\nimport {SortByName} from './components/SortByName';\n\ninterface ServerResponse{\n  data:ResponseData,\n}\nexport interface Hotel{\n  \"_id\": string,\n  \"id\": number,\n  \"name\": string,\n  \"address\":string,\n  \"images\":{ url: string, caption: string }[],\n}\ninterface ResponseData {\n  success: boolean,\n  error:string,\n  result: Hotel[],\n}\nconst App: React.FunctionComponent = () => {\n\n  const [searchTerm, setSearchTerm] = useState<string>('cars');\n  const [hotels, setHotels] = useState<Hotel[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [sort,setSort] = useState<boolean>(false);\n\n  const getSearchTerm = (e: React.BaseSyntheticEvent) => {\n    setLoading(true);\n    setSearchTerm(e.target.value);\n  }\n\n  const sortByName = () => {\n    setSort(true);\n  }\n  if (sort){\n      hotels.sort((hotel1,hotel2)=> hotel1.name.toLowerCase().localeCompare(hotel2.name.toLowerCase()));\n  }\n  useEffect(() => {\n    const fetchHotels = async () => {\n        const response : ServerResponse = await Axios.get(`/hotels?search=${searchTerm}`);\n        const filteredHotels : Hotel[] = response.data.result;\n        setHotels(filteredHotels);\n        setLoading(false);\n    }\n    fetchHotels();\n  }, [searchTerm])\n  return (\n    <>\n      <div className=\"query-section\">\n        <SearchBox onSearch={getSearchTerm}/>\n        <SortByName sort={sortByName}/>\n      </div>\n      {loading ? <Spinner / >:<HotelsContainer hotels={hotels}/>}\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}